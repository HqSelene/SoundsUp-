import React, { useRef, forwardRef, useImperativeHandle } from 'react';
import { View, Text, StyleSheet, Dimensions } from 'react-native';
import { captureRef } from 'react-native-view-shot';
import * as FileSystem from 'expo-file-system';
import * as Sharing from 'expo-sharing';
import { SmartImage } from './SmartImage';
import EmotionPieChart from './EmotionPieChart';
import { COSMIC_THEME } from '../constants/theme';
import { Ticket } from '../types';

const { width } = Dimensions.get('window');
const SHARE_IMAGE_WIDTH = 400;
const SHARE_IMAGE_HEIGHT = 600;

interface ShareImageGeneratorProps {
  ticket: Ticket;
  onShare: (imageUri: string) => void;
}

export interface ShareImageGeneratorRef {
  generateShareImage: () => Promise<void>;
}

export const ShareImageGenerator = forwardRef<ShareImageGeneratorRef, ShareImageGeneratorProps>(
  ({ ticket, onShare }, ref) => {
    const viewRef = useRef<View>(null);

    const generateShareImage = async () => {
      try {
        if (!viewRef.current) {
          console.error('ViewRef is null');
          return;
        }
        
        console.log('开始生成分享图片...');
        
        // 捕获视图为图片
        const uri = await captureRef(viewRef.current, {
          format: 'png',
          quality: 1,
          width: SHARE_IMAGE_WIDTH,
          height: SHARE_IMAGE_HEIGHT,
        });
        
        console.log('分享图片生成成功:', uri);
        onShare(uri);
      } catch (error) {
        console.error('生成分享图片失败:', error);
        throw error;
      }
    };

    // 暴露方法给父组件
    useImperativeHandle(ref, () => ({
      generateShareImage,
    }));

    return (
      <View style={styles.container}>
        {/* 隐藏的分享图片视图 */}
        <View ref={viewRef} style={styles.shareImageContainer}>
          {/* 背景渐变 */}
          <View style={styles.backgroundGradient}>
            {/* SoundsUp Logo 水印 */}
            <View style={styles.logoContainer}>
              <Text style={styles.logoText}>SoundsUp</Text>
              <Text style={styles.logoSubtext}>AI Music Analysis</Text>
            </View>
            
            {/* Digital Ticket 图片 */}
            {ticket.image && (
              <View style={styles.ticketImageContainer}>
                <SmartImage 
                  source={ticket.image}
                  style={styles.ticketImage}
                  resizeMode="contain"
                />
              </View>
            )}
            
            {/* 演唱会信息 */}
            <View style={styles.concertInfoContainer}>
              <Text style={styles.artistName}>{ticket.concertInfo.artist}</Text>
              <Text style={styles.concertName}>{ticket.concertInfo.concertName || 'Concert'}</Text>
              {ticket.concertInfo.time && (
                <Text style={styles.concertDetail}>📅 {ticket.concertInfo.time}</Text>
              )}
              {ticket.concertInfo.location && (
                <Text style={styles.concertDetail}>📍 {ticket.concertInfo.location}</Text>
              )}
            </View>
            
            {/* AI 分析结果 */}
            <View style={styles.analysisContainer}>
              <Text style={styles.analysisTitle}>🤖 AI Emotion Analysis</Text>
              
              {/* 情绪饼图 */}
              <View style={styles.chartContainer}>
                <EmotionPieChart 
                  emotionData={ticket.emotions || {}}
                  size={120}
                />
              </View>
              
              {/* 分析文本摘要 */}
              {ticket.text && (
                <Text style={styles.analysisText} numberOfLines={3}>
                  {ticket.text}
                </Text>
              )}
            </View>
            
            {/* 底部水印 */}
            <View style={styles.bottomWatermark}>
              <Text style={styles.watermarkText}>Generated by SoundsUp AI</Text>
            </View>
          </View>
        </View>
      </View>
    );
  }
);

const styles = StyleSheet.create({
  container: {
    position: 'absolute',
    top: -10000, // 隐藏在屏幕外
    left: 0,
  },
  shareImageContainer: {
    width: SHARE_IMAGE_WIDTH,
    height: SHARE_IMAGE_HEIGHT,
    backgroundColor: COSMIC_THEME.colors.background,
  },
  backgroundGradient: {
    flex: 1,
    backgroundColor: COSMIC_THEME.colors.background,
    padding: 20,
  },
  logoContainer: {
    alignItems: 'center',
    marginBottom: 20,
  },
  logoText: {
    fontSize: 24,
    fontWeight: 'bold',
    color: COSMIC_THEME.colors.accent,
  },
  logoSubtext: {
    fontSize: 12,
    color: COSMIC_THEME.colors.textSecondary,
  },
  ticketImageContainer: {
    alignItems: 'center',
    marginBottom: 20,
  },
  ticketImage: {
    width: 200,
    height: 120,
    borderRadius: 8,
  },
  concertInfoContainer: {
    alignItems: 'center',
    marginBottom: 20,
  },
  artistName: {
    fontSize: 20,
    fontWeight: 'bold',
    color: COSMIC_THEME.colors.text,
    textAlign: 'center',
  },
  concertName: {
    fontSize: 16,
    color: COSMIC_THEME.colors.textSecondary,
    textAlign: 'center',
    marginBottom: 8,
  },
  concertDetail: {
    fontSize: 12,
    color: COSMIC_THEME.colors.textSecondary,
    textAlign: 'center',
  },
  analysisContainer: {
    alignItems: 'center',
    flex: 1,
  },
  analysisTitle: {
    fontSize: 16,
    fontWeight: 'bold',
    color: COSMIC_THEME.colors.accent,
    marginBottom: 10,
  },
  chartContainer: {
    marginBottom: 15,
  },
  analysisText: {
    fontSize: 12,
    color: COSMIC_THEME.colors.textSecondary,
    textAlign: 'center',
    paddingHorizontal: 10,
  },
  bottomWatermark: {
    alignItems: 'center',
    paddingTop: 10,
  },
  watermarkText: {
    fontSize: 10,
    color: COSMIC_THEME.colors.textSecondary,
    opacity: 0.7,
  },
});